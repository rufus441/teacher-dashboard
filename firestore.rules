rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función para verificar si el usuario es profesor
    function isTeacher() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }

    // Función para verificar si el usuario es estudiante
    function isStudent() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }
    
    // Colección de usuarios
    match /users/{userId} {
      allow create: if true;  // Permitir crear usuarios sin autenticación
      allow read: if isAuthenticated();
      allow update: if request.auth.uid == userId;
      allow delete: if false;
    }
    
    // Colección de estudiantes
    match /students/{studentId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Colección de tareas
    match /tasks/{taskId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Colección de asistencia
    match /attendance/{attendanceId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
    
    // Colección de comentarios
    match /comments/{commentId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
} 